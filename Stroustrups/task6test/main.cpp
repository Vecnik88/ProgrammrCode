// Created Vecnik88

/*
    Напишите шаблон метода добавления элемента шаблонного класса, реализующего дерево.

    Write a template method of adding the template class member that implements the tree

*/

// Задача из тестового задания С++
// Реализовано на примере бинарного дерева

template <typename T>

T* insert(T* p_tree, int key)

{

// если дерево пустое

if(p_tree == nullptr)

{

T* p_new_tree = new T;

p_new_tree->p_left = nullptr;

p_new_tree->p_right = nullptr;

p_new_tree->key_value = key;

return p_new_tree;

}

// вставка с левой стороны

if(p_tree->key_value > key)

{

p_tree->p_left = insert(p_tree->p_left, key);

}

// вставка с правой стороны

else

{

p_tree->p_right = insert(p_tree->p_right, key);

}

return p_tree;

}

// Остальные задачи из теоритического задания по С++ junior developer

/*

    1 Где и как описать глобальную переменную, которая используется в двух исходных файлах


---> объявить её один раз в хидере, подключить хидер в оба файла ###

[] объявить её в каждом файле

[] объявить её в любом одном файле

[] объявить её в одном из файлов, в зависимости от её использования

[] другое


    2 Что плохого в том, что бы написать "int a = (int)GetNumber();"?


[] ничего плохого

[] ничего плохого, если функция GetNumber() не принимает аргументов и

возвращает численное значение

[] ничего плохого, если функция GetNumber() не принимает аргументов и

возвращает целочисленное значение

[] в С такое не скомпилируется

[] в С++ такое не скомпилируется

---> другое ###

Это приведение в стиле С. Оно не удобно читается и сложно находится.

Возможно переполнение, усечение данных, в следствие чего данная ошибка будет другое находима.
Если без приведения никак – то лучше задуматься правильно ли выбрана функция
и в языке С++ приведение рекомендуется делать явно int a = static_cast<int>(Get_number());
это облегчит поиск ошибок и будет явно бросаться в глаза.

    3 Какая разница между malloc и new


[] нет разницы вообще

[] нет имеющей практическое значение разницы

---> другое ###

В языке С нет new/delete;

new не требует приведения типа;

в конструкторе new можно инициализировать объект (в его конструкторе);

new работает быстрее, сообщает об ошибках возникших с выделением памяти(благодаря исключениям).


    4 Укажите все отличия class и struct


[] нет отличий

[] это несравнимо разные понятия

---> другое ###

В классе по умолчанию атрибуты и методы private; в структуре public.

В классе по умолчанию наследование private, в структуре public.


    5 Отметьте все истинные высказывания. Виртуальные методы...


[] Обычно работают быстрее обычных

[] Обычно работают быстрее статических

[] Обычно работают так же быстро, как и обычные

[] Обычно работают так же быстро, как и статические

--->Обычно работают медленнее обычных ###

--->Обычно работают медленнее статических ###

[] На самом деле в С++ внутри все методы виртуальные

[] На самом деле виртуальности в C++ нет, а ключевое слово virtual просто

позволяет компилятору оптимизировать код вызова метода

[] другое


    6 Напишите шаблон метода добавления элемента шаблонного класса, реализующего дерево


На примере бинарного дерева

template <typename T>

T* insert(T* p_tree, int key)

{

// если дерево пустое

if(p_tree == nullptr)

{

T* p_new_tree = new T;

p_new_tree->p_left = nullptr;

p_new_tree->p_right = nullptr;

p_new_tree->key_value = key;

return p_new_tree;

}

// вставка с левой стороны

if(p_tree->key_value > key)

{

p_tree->p_left = insert(p_tree->p_left, key);

}

// вставка с правой стороны

else

{

p_tree->p_right = insert(p_tree->p_right, key);

}

return p_tree;

}

    7 Когда и где будут инстанциированы шаблоны?


[] При компиляции по месту описания для всех типов

[] При компиляции по месту описания для каждого типа отдельно

[] При компиляции по месту первого обнаруженного применения для всех типов

---> При компиляции по месту первого обнаруженного применения для каждого типа ###

отдельно

[] При выполнении по месту первого выполнения для всех типов

[] При выполнении по месту первого выполнения для каждого типа отдельно

[] Другое


    8 Укажите проблемы данного кода


#include <stdio.h>

#include <string.h>

main()

{

string s1 = argc[1];

string s2 = argc[2];

for(int i=1; i < s1.length(); i++)

if (i=1){

string s3 = s1[i] + s2[i];

else

s3 = s3 + s1[i] + s2[i];

}

printf("s3=%s",s3);

}

[] нет серьёзных ошибок, должно работать

[] в C++ нет типа string

[] main не возвращает значение

[] main не принимает аргументов

[] в C++, в отличие от C, нет main, а есть winmain

[] в C++ нельзя объявлять переменную в теле цикла

---->другое ###

Код написан на языке С, в С нет типа string, соответственно все что написано в ф-ции для типа string недействительно,
код некорректен и не будет работать.
*/
